From 1cb3720f777e2755737479a96c0488710abdb05b Mon Sep 17 00:00:00 2001
From: thinkofdeath <purggames@gmail.com>
Date: Fri, 12 Apr 2013 18:19:11 +0100
Subject: [PATCH] Allow playEffect to spawn particles


diff --git a/src/main/java/net/minecraft/server/Packet63WorldParticles.java b/src/main/java/net/minecraft/server/Packet63WorldParticles.java
index d7f4d2a..af52c88 100644
--- a/src/main/java/net/minecraft/server/Packet63WorldParticles.java
+++ b/src/main/java/net/minecraft/server/Packet63WorldParticles.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 import java.io.DataInput;
 import java.io.DataOutput;
+import java.io.IOException; // CraftBukkit - import IOException
 
 public class Packet63WorldParticles extends Packet {
 
@@ -17,7 +18,21 @@ public class Packet63WorldParticles extends Packet {
 
     public Packet63WorldParticles() {}
 
-    public void a(DataInput datainput) {
+    // CraftBukkit start - Added constructor
+    public Packet63WorldParticles(String particleName, float x, float y, float z, float offsetX, float offsetY, float offsetZ, float speed, int count) {
+        a = particleName;
+        b = x;
+        c = y;
+        d = z;
+        e = offsetX;
+        f = offsetY;
+        g = offsetZ;
+        h = speed;
+        i = count;
+    }
+    // CraftBukkit end
+
+    public void a(DataInput datainput) throws IOException { // CraftBukkit - throws IOException
         this.a = a(datainput, 64);
         this.b = datainput.readFloat();
         this.c = datainput.readFloat();
@@ -29,7 +44,7 @@ public class Packet63WorldParticles extends Packet {
         this.i = datainput.readInt();
     }
 
-    public void a(DataOutput dataoutput) {
+    public void a(DataOutput dataoutput) throws IOException { // CraftBukkit - throws IOException
         a(this.a, dataoutput);
         dataoutput.writeFloat(this.b);
         dataoutput.writeFloat(this.c);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftEffect.java b/src/main/java/org/bukkit/craftbukkit/CraftEffect.java
index 7de0de5..7eca388 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftEffect.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftEffect.java
@@ -55,6 +55,8 @@ public class CraftEffect {
             Validate.isTrue(((Material) data).isBlock(), "Material is not a block!");
             datavalue = ((Material) data).getId();
             break;
+        case ITEM_BREAK:
+            datavalue = ((Material) data).getId();
         default:
             datavalue = 0;
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index f101db0..e605efb 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -44,6 +44,7 @@ import org.bukkit.event.world.SpawnChangeEvent;
 import org.bukkit.generator.BlockPopulator;
 import org.bukkit.generator.ChunkGenerator;
 import org.bukkit.inventory.ItemStack;
+import org.bukkit.material.MaterialData;
 import org.bukkit.metadata.MetadataValue;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.messaging.StandardMessenger;
@@ -749,6 +750,10 @@ public class CraftWorld implements World {
         playEffect(player.getLocation(), effect, data, 0);
     }
 
+    public void playEffect(Location location, Effect effect) {
+        playEffect(location, effect, 0);
+    }
+
     public void playEffect(Location location, Effect effect, int data) {
         playEffect(location, effect, data, 64);
     }
@@ -763,23 +768,53 @@ public class CraftWorld implements World {
         } else {
             Validate.isTrue(effect.getData() == null, "Wrong kind of data for this effect!");
         }
-
-        int datavalue = data == null ? 0 : CraftEffect.getDataValue(effect, data);
-        playEffect(loc, effect, datavalue, radius);
+        if (data.getClass().equals(MaterialData.class)) {
+            MaterialData materialData = (MaterialData) data;
+            Validate.isTrue(!materialData.getItemType().isBlock(), "Material must be block");
+            playEffect(loc, effect, materialData.getItemType().getId(), materialData.getData(), 0, 0, 0, 1, 1, radius);
+        } else {
+            int datavalue = data == null ? 0 : CraftEffect.getDataValue(effect, data);
+            playEffect(loc, effect, datavalue, radius);
+        }
     }
 
     public void playEffect(Location location, Effect effect, int data, int radius) {
+        playEffect(location,effect, data, 0, 0f, 0f, 0f, 1f, 1, radius);
+    }
+
+    public void playEffect(Location location, Effect effect, int id, int data, float offsetX, float offsetY, float offsetZ, float speed, int particleCount, int radius) {
         Validate.notNull(location, "Location cannot be null");
         Validate.notNull(effect, "Effect cannot be null");
         Validate.notNull(location.getWorld(), "World cannot be null");
-        int packetData = effect.getId();
-        Packet61WorldEvent packet = new Packet61WorldEvent(packetData, location.getBlockX(), location.getBlockY(), location.getBlockZ(), data, false);
+
+        Packet packet = null;
+        if (effect.getType() != Effect.Type.PARTICLE) {
+            int packetData = effect.getId();
+            packet = new Packet61WorldEvent(packetData, location.getBlockX(), location.getBlockY(), location.getBlockZ(), id, false);
+        } else {
+            StringBuilder particleFullName = new StringBuilder();
+            particleFullName.append(effect.getName());
+
+            if (effect.getData() != null && (effect.getData().equals(Material.class) || effect.getData().equals(MaterialData.class))) {
+                particleFullName.append('_').append(id);
+            }
+
+            if (effect.getData() != null && effect.getData().equals(MaterialData.class)) {
+                particleFullName.append('_').append(data);
+            }
+            packet = new Packet63WorldParticles(effect.getName(), (float)location.getX(), (float)location.getY(), (float)location.getZ(), offsetX, offsetY, offsetZ, particleCount, radius);
+        }
+
         int distance;
         radius *= radius;
 
         for (Player player : getPlayers()) {
-            if (((CraftPlayer) player).getHandle().playerConnection == null) continue;
-            if (!location.getWorld().equals(player.getWorld())) continue;
+            if (((CraftPlayer) player).getHandle().playerConnection == null) {
+                continue;
+            }
+            if (!location.getWorld().equals(player.getWorld())) {
+                continue;
+            }
 
             distance = (int) player.getLocation().distanceSquared(location);
             if (distance <= radius) {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index b6129f5..124a175 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -48,6 +48,7 @@ import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerUnregisterChannelEvent;
 import org.bukkit.inventory.InventoryView.Property;
 import org.bukkit.map.MapView;
+import org.bukkit.material.MaterialData;
 import org.bukkit.metadata.MetadataValue;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.messaging.Messenger;
@@ -279,23 +280,54 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         getHandle().playerConnection.sendPacket(packet);
     }
 
-    public void playEffect(Location loc, Effect effect, int data) {
-        if (getHandle().playerConnection == null) return;
-
-        int packetData = effect.getId();
-        Packet61WorldEvent packet = new Packet61WorldEvent(packetData, loc.getBlockX(), loc.getBlockY(), loc.getBlockZ(), data, false);
-        getHandle().playerConnection.sendPacket(packet);
-    }
-
     public <T> void playEffect(Location loc, Effect effect, T data) {
         if (data != null) {
             Validate.isTrue(data.getClass().equals(effect.getData()), "Wrong kind of data for this effect!");
         } else {
             Validate.isTrue(effect.getData() == null, "Wrong kind of data for this effect!");
         }
+        if (data.getClass().equals(MaterialData.class)) {
+            MaterialData materialData = (MaterialData) data;
+            Validate.isTrue(!materialData.getItemType().isBlock(), "Material must be block");
+            playEffect(loc, effect, materialData.getItemType().getId(), materialData.getData(), 0, 0, 0, 1, 1, 64);
+        } else {
+            int datavalue = data == null ? 0 : CraftEffect.getDataValue(effect, data);
+            playEffect(loc, effect, datavalue);
+        }
+    }
+
+    public void playEffect(Location location, Effect effect, int data) {
+        playEffect(location, effect, data, 0, 0f, 0f, 0f, 1f, 1, 64);
+    }
+
+    public void playEffect(Location location, Effect effect, int id, int data, float offsetX, float offsetY, float offsetZ, float speed, int particleCount, int radius) {
+        Validate.notNull(location, "Location cannot be null");
+        Validate.notNull(effect, "Effect cannot be null");
+        Validate.notNull(location.getWorld(), "World cannot be null");
 
-        int datavalue = data == null ? 0 : CraftEffect.getDataValue(effect, data);
-        playEffect(loc, effect, datavalue);
+        Packet packet = null;
+        if (effect.getType() != Effect.Type.PARTICLE) {
+            int packetData = effect.getId();
+            packet = new Packet61WorldEvent(packetData, location.getBlockX(), location.getBlockY(), location.getBlockZ(), id, false);
+        } else {
+            StringBuilder particleFullName = new StringBuilder();
+            particleFullName.append(effect.getName());
+
+            if (effect.getData() != null && (effect.getData().equals(Material.class) || effect.getData().equals(MaterialData.class))) {
+                particleFullName.append('_').append(id);
+            }
+
+            if (effect.getData() != null && effect.getData().equals(MaterialData.class)) {
+                particleFullName.append('_').append(data);
+            }
+            packet = new Packet63WorldParticles(effect.getName(), (float)location.getX(), (float)location.getY(), (float)location.getZ(), offsetX, offsetY, offsetZ, particleCount, radius);
+        }
+
+        if (!location.getWorld().equals(getWorld())) {
+            return;
+        }
+
+        getHandle().playerConnection.sendPacket(packet);
     }
 
     public void sendBlockChange(Location loc, Material material, byte data) {
-- 
1.8.5.1

