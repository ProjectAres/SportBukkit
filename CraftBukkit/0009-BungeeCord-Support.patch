From d59fa7f6233a9f32f15bf9419a007520f15127bc Mon Sep 17 00:00:00 2001
From: Steve Anton <anxuiz.nx@gmail.com>
Date: Sat, 13 Apr 2013 10:50:21 -0700
Subject: [PATCH] BungeeCord Support

- Allows BungeeCord to set the players real IP address very early in the login process, so that the BungeeCord proxy IP is never even seen by a plugin.
- Ported from Spigot

diff --git a/src/main/java/net/minecraft/server/HandshakeListener.java b/src/main/java/net/minecraft/server/HandshakeListener.java
index 54ecbdf..fa13c5b 100644
--- a/src/main/java/net/minecraft/server/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/HandshakeListener.java
@@ -73,6 +73,21 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 this.b.a((IChatBaseComponent) chatcomponenttext);
             } else {
                 this.b.a((PacketListener) (new LoginListener(this.a, this.b)));
+                // CraftBukkit Start
+                if (a.server.bungee) {
+                    String[] split = packethandshakinginsetprotocol.b.split("\00");
+                    if (split.length == 3) {
+                        packethandshakinginsetprotocol.b = split[0];
+                        b.l = new java.net.InetSocketAddress(split[1], ((java.net.InetSocketAddress) b.getSocketAddress()).getPort());
+                        b.spoofedUUID = split[2];
+                    } else {
+                        chatcomponenttext = new ChatComponentText("If you wish to use IP forwarding, please enable it in your BungeeCord config as well!");
+                        this.b.handle(new PacketLoginOutDisconnect(chatcomponenttext), new GenericFutureListener[0]);
+                        this.b.a(chatcomponenttext);
+                        return;
+                    }
+                }
+                // CraftBukkit End
                 ((LoginListener) this.b.getPacketListener()).hostname = packethandshakinginsetprotocol.b + ":" + packethandshakinginsetprotocol.c; // CraftBukkit - set hostname
             }
             break;
diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index 6beac82..24a77a2 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -61,9 +61,16 @@ public class LoginListener implements PacketLoginInListener {
 
     public void c() {
         if (!this.i.isComplete()) {
-            UUID uuid = UUID.nameUUIDFromBytes(("OfflinePlayer:" + this.i.getName()).getBytes(Charsets.UTF_8));
-
-            this.i = new GameProfile(uuid.toString().replaceAll("-", ""), this.i.getName());
+            // CraftBukkit start
+            String uuid;
+            if (networkManager.spoofedUUID != null) {
+                uuid = networkManager.spoofedUUID;
+            } else {
+                uuid = UUID.nameUUIDFromBytes(("OfflinePlayer:" + this.i.getName()).getBytes(Charsets.UTF_8)).toString().replaceAll("-", "");
+            }
+
+            this.i = new GameProfile(uuid, this.i.getName());
+            // CraftBukkit end
         }
 
         // CraftBukkit start
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index 8f829bb..6b128d8 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -34,7 +34,8 @@ public class NetworkManager extends SimpleChannelInboundHandler {
     private final Queue i = Queues.newConcurrentLinkedQueue();
     private final Queue j = Queues.newConcurrentLinkedQueue();
     private Channel k;
-    private SocketAddress l;
+    public SocketAddress l; // CraftBukkit - private -> public
+    public String spoofedUUID; // CraftBukkit
     private PacketListener m;
     private EnumProtocol n;
     private IChatBaseComponent o;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index e6c8575..bbf4fb4 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -223,6 +223,7 @@ public final class CraftServer implements Server {
     private boolean printSaveWarning;
     private CraftIconCache icon;
     private boolean overrideAllCommandBlockCommands = false;
+    public boolean bungee = false;
 
     private final class BooleanWrapper {
         private boolean value = true;
@@ -290,6 +291,7 @@ public final class CraftServer implements Server {
         }
 
         saveCommandsConfig();
+        bungee = configuration.getBoolean("settings.bungee");
         overrideAllCommandBlockCommands = commandsConfiguration.getStringList("command-block-overrides").contains("*");
         ((SimplePluginManager) pluginManager).useTimings(configuration.getBoolean("settings.plugin-profiling"));
         monsterSpawn = configuration.getInt("spawn-limits.monsters");
diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index 129ac34..c76d5ae 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -2,10 +2,10 @@
 # As you can see, there's actually not that much to configure without any plugins.
 # For a reference for any variable inside this file, check out the Bukkit Wiki at
 # http://wiki.bukkit.org/Bukkit.yml
-# 
+#
 # If you need help on this file, feel free to join us on irc or leave a message
 # on the forums asking for advice.
-# 
+#
 # IRC: #bukkit @ esper.net
 #    (If this means nothing to you, just go to http://webchat.esper.net/?channels=bukkit )
 # Forums: http://forums.bukkit.org/forums/bukkit-help.6/
@@ -25,6 +25,7 @@ settings:
     query-plugins: true
     deprecated-verbose: default
     shutdown-message: Server closed
+    bungeecord: false
 spawn-limits:
     monsters: 70
     animals: 15
-- 
1.8.5.1

