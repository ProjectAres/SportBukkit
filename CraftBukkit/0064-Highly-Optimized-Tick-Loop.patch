From 4729a99beef763f47cb60fe39b6e5a376c300099 Mon Sep 17 00:00:00 2001
From: md_5 <md_5@live.com.au>
Date: Sun, 3 Feb 2013 12:28:17 +1100
Subject: [PATCH] Highly Optimized Tick Loop


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 9272e02..0f717dc 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -101,6 +101,10 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
     public java.util.Queue<Runnable> processQueue = new java.util.concurrent.ConcurrentLinkedQueue<Runnable>();
     public int autosavePeriod;
     // CraftBukkit end
+    // Spigot start
+    private static final int TICK_TIME = 1000000000 / TPS;
+    private static long catchupTime = 0;
+    // Spigot end
 
     public MinecraftServer(OptionSet options, Proxy proxy) { // CraftBukkit - signature file -> OptionSet
         i = this;
@@ -429,38 +433,28 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IMo
                 this.p.setServerInfo(new ServerPingServerData("1.7.2", 4));
                 this.a(this.p);
 
+                // Spigot start
+                long lastTick = System.nanoTime(), catchupTime = 0, curTime, wait, tickSection = lastTick;
                 while (this.isRunning) {
-                    long k = ap();
-                    long l = k - i;
-
-                    if (l > 2000L && i - this.O >= 15000L) {
-                        if (this.server.getWarnOnOverload()) // CraftBukkit - Added option to suppress warning messages
-                        h.warn("Can\'t keep up! Did the system time change, or is the server overloaded? Running {}ms behind, skipping {} tick(s)", new Object[] { Long.valueOf(l), Long.valueOf(l / 50L)});
-                        l = 2000L;
-                        this.O = i;
-                    }
-
-                    if (l < 0L) {
-                        h.warn("Time ran backwards! Did the system time change?");
-                        l = 0L;
+                    curTime = System.nanoTime();
+                    wait = TICK_TIME - (curTime - lastTick) - catchupTime;
+                    if (wait > 0) {
+                        Thread.sleep(wait / 1000000);
+                        catchupTime = 0;
+                        continue;
+                    } else {
+                        catchupTime = Math.min(1000000000, Math.abs(wait));
                     }
 
-                    j += l;
-                    i = k;
-                    if (this.worlds.get(0).everyoneDeeplySleeping()) { // CraftBukkit
-                        this.t();
-                        j = 0L;
-                    } else {
-                        while (j > 50L) {
-                            MinecraftServer.currentTick = (int) (System.currentTimeMillis() / 50); // CraftBukkit
-                            j -= 50L;
-                            this.t();
-                        }
+                    if (MinecraftServer.currentTick++ % SAMPLE_INTERVAL == 0) {
+                        tickSection = curTime;
                     }
+                    lastTick = curTime;
 
-                    Thread.sleep(1L);
+                    this.t();
                     this.N = true;
                 }
+                // Spigot end
             } else {
                 this.a((CrashReport) null);
             }
-- 
1.8.5.1

