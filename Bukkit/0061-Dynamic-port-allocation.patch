From cdd009d7e2ef14102fe2a4f4389e23745c9563e7 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 25 Aug 2015 05:22:19 -0400
Subject: [PATCH] Dynamic port allocation


diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 37918e4..77c07e3 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -160,13 +160,39 @@ public final class Bukkit {
      */
     public static int getMaxPlayers() {
         return server.getMaxPlayers();
+
+    }
+    /**
+     * Get the port number specified in the server configuration.
+     * If this is 0, the port is dynamically allocated, and can be
+     * retrieved with {@link #getPort()}.
+     *
+     * @return the configured listening port
+     */
+    public static int getConfiguredPort() {
+        return server.getConfiguredPort();
     }
 
     /**
-     * Get the game port that the server runs on.
+     * Get the port that the server is currently listening on.
+     * If the port is dynamic, this method can be used to detect the
+     * ephemeral port that was allocated. If the server is not bound
+     * to a port, this will return 0, which should only happen if
+     * binding failed for some reason.
+     *
+     * @return the currently bound listening port
+     */
+    public static int getBoundPort() {
+        return server.getBoundPort();
+    }
+
+    /**
+     * Get the port that the server is currently listening on,
+     * or the configured port if the server is not currently listening.
      *
      * @return the port number of this server
      */
+    @Deprecated
     public static int getPort() {
         return server.getPort();
     }
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 4e64c28..dc758a2 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -137,10 +137,35 @@ public interface Server extends PluginMessageRecipient {
     public int getMaxPlayers();
 
     /**
-     * Get the game port that the server runs on.
+     * Get the port number specified in the server configuration.
+     * If this is 0, the port is dynamically allocated, and can be
+     * retrieved with {@link #getBoundPort()}.
+     *
+     * @return the configured listening port
+     */
+    int getConfiguredPort();
+
+    /**
+     * Get the port that the server is currently listening on.
+     * If the port is dynamic, this method can be used to detect the
+     * ephemeral port that was allocated. If the server is not bound
+     * to a port, this will return 0, which should only happen if
+     * binding failed for some reason.
+     *
+     * @return the currently bound listening port
+     */
+    int getBoundPort();
+
+    /**
+     * Get the port that the server is currently listening on,
+     * or the configured port if the server is not currently listening.
+     *
+     * Deprecated: use either {@link #getConfiguredPort()} or {@link #getBoundPort()},
+     * depending on what, exactly, you want to know.
      *
      * @return the port number of this server
      */
+    @Deprecated
     public int getPort();
 
     /**
-- 
1.9.0

