--- a/net/minecraft/server/NetworkManager.java
+++ b/net/minecraft/server/NetworkManager.java
@@ -28,6 +28,8 @@
 import org.apache.logging.log4j.Marker;
 import org.apache.logging.log4j.MarkerManager;
 
+import org.bukkit.craftbukkit.protocol.Protocol; // SportBukkit
+
 public class NetworkManager extends SimpleChannelInboundHandler<Packet<?>> {
 
     private static final Logger g = LogManager.getLogger();
@@ -65,7 +67,14 @@
     private final Queue<NetworkManager.QueuedPacket> i = Queues.newConcurrentLinkedQueue();
     private final ReentrantReadWriteLock j = new ReentrantReadWriteLock();
     public Channel channel;
-    private SocketAddress l;
+    // SportBukkit Start
+    public SocketAddress l;
+    public java.util.UUID spoofedUUID;
+    public com.mojang.authlib.properties.Property[] spoofedProfile;
+
+    public int protocolVersion = Protocol.LATEST;
+    public java.util.UUID playerId;
+    // SportBukkit End
     private PacketListener m;
     private IChatBaseComponent n;
     private boolean o;
@@ -83,7 +92,7 @@
         try {
             this.setProtocol(EnumProtocol.HANDSHAKING);
         } catch (Throwable throwable) {
-            NetworkManager.g.fatal(throwable);
+            NetworkManager.g.fatal("Exception setting protocol", throwable);
         }
 
     }
@@ -103,18 +112,19 @@
 
         if (throwable instanceof TimeoutException) {
             chatmessage = new ChatMessage("disconnect.timeout", new Object[0]);
+            NetworkManager.g.debug("Uncaught Exception", throwable);
         } else {
             chatmessage = new ChatMessage("disconnect.genericReason", new Object[] { "Internal Exception: " + throwable});
+            NetworkManager.g.fatal("Uncaught Exception", throwable);
         }
 
-        NetworkManager.g.debug(throwable);
         this.close(chatmessage);
     }
 
     protected void a(ChannelHandlerContext channelhandlercontext, Packet<?> packet) throws Exception {
         if (this.channel.isOpen()) {
             try {
-                packet.a(this.m);
+                ((Packet) packet).a(this.m); // CraftBukkit - decompile error
             } catch (CancelledPacketHandleException cancelledpackethandleexception) {
                 ;
             }
@@ -233,7 +243,7 @@
 
     public void close(IChatBaseComponent ichatbasecomponent) {
         if (this.channel.isOpen()) {
-            this.channel.close().awaitUninterruptibly();
+            this.channel.close(); // We can't wait as this may be called from an event loop.
             this.n = ichatbasecomponent;
         }
 
@@ -257,6 +267,7 @@
         return this.channel == null;
     }
 
+    public PacketListener getPacketListener() { return i(); } // SportBukkit - method alias
     public PacketListener i() {
         return this.m;
     }
@@ -310,7 +321,7 @@
         }
     }
 
-    protected void channelRead0(ChannelHandlerContext channelhandlercontext, Object object) throws Exception {
+    protected void channelRead0(ChannelHandlerContext channelhandlercontext, Packet object) throws Exception { // CraftBukkit - fix decompile error
         this.a(channelhandlercontext, (Packet) object);
     }
 
