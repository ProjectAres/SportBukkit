--- a/net/minecraft/server/PacketPlayOutChat.java
+++ b/net/minecraft/server/PacketPlayOutChat.java
@@ -2,7 +2,44 @@
 
 import java.io.IOException;
 
-public class PacketPlayOutChat implements Packet<PacketListenerPlayOut> {
+// SportBukkit start
+import net.md_5.bungee.api.ChatMessageType;
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.api.chat.TextComponent;
+import org.bukkit.craftbukkit.protocol.RenderableComponent;
+import org.bukkit.craftbukkit.protocol.Renderable;
+import org.bukkit.craftbukkit.util.BungeeChatUtils;
+import org.bukkit.entity.Player;
+
+public class PacketPlayOutChat implements Packet<PacketListenerPlayOut>, Renderable {
+
+    private class RenderableChatComponent extends RenderableComponent {
+
+        public RenderableChatComponent(BaseComponent bukkit) {
+            super(bukkit);
+        }
+
+        @Override
+        protected BaseComponent afterRender(BaseComponent text) {
+            if(b == ChatMessageType.ACTION_BAR.ordinal()) {
+                // Work around a client bug where component text above the hotbar is not formatted.
+                // The only way to format it is by wrapping legacy formatting in a text component.
+                text = new TextComponent(TextComponent.toLegacyText(text));
+            }
+            return text;
+        }
+    }
+
+    @Override
+    public void render(Player viewer) {
+        ((RenderableComponent) a).render(viewer);
+    }
+
+    public PacketPlayOutChat(BaseComponent text, ChatMessageType position) {
+        this.a = new RenderableChatComponent(text);
+        this.b = (byte) position.ordinal();
+    }
+    // SportBukkit end
 
     private IChatBaseComponent a;
     private byte b;
@@ -14,7 +51,7 @@
     }
 
     public PacketPlayOutChat(IChatBaseComponent ichatbasecomponent, byte b0) {
-        this.a = ichatbasecomponent;
+        this.a = new RenderableChatComponent(BungeeChatUtils.toBungee(ichatbasecomponent)); // SportBukkit
         this.b = b0;
     }
 
